/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "tap-preferred"; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC           &kp N1  &kp N2  &kp N3    &kp N4            &kp N5                         &kp N6  &kp N7        &kp N8         &kp N9   &kp N0    &kp GRAVE
&kp TAB           &kp Q   &kp W   &kp E     &kp R             &kp T                          &kp Y   &kp U         &kp I          &kp O    &kp P     &kp BACKSLASH
&kp LEFT_SHIFT    &kp A   &kp S   &kp D     &mt LEFT_SHIFT F  &kp G                          &kp H   &mt RSHIFT J  &mt RCTRL K    &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X   &kp C     &kp V             &kp B   &kp LBKT     &kp RBKT  &kp N   &kp M         &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_CONTROL
                                  &kp LALT  &kp LGUI          &mo 1   &kp SPACE    &kp RET   &mo 2   &kp BSPC      &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &kp C_BRI_DN  &kp C_BRI_UP  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP                    &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE  &trans          &trans           &trans
&kp F1     &kp F2        &kp F3        &kp F4      &kp F5        &kp F6                          &kp F7      &kp F8      &kp F9            &kp F10         &kp F11          &kp F12
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH    &kp DOLLAR    &kp PRCNT                       &kp CARET   &kp AMPS    &kp KP_MULTIPLY   &kp LPAR        &kp RPAR         &kp TILDE
&trans     &trans        &trans        &trans      &trans        &trans        &trans    &trans  &trans      &kp UNDER   &kp KP_PLUS       &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
                                       &trans      &trans        &trans        &trans    &trans  &trans      &kp DEL     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&studio_unlock  &trans  &trans  &trans         &trans       &trans                    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans          &trans  &trans  &kp PAGE_DOWN  &kp PAGE_UP  &trans                    &kp N6      &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans          &trans  &trans  &kp HOME       &kp END      &trans                    &trans      &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans
&trans          &trans  &trans  &trans         &trans       &trans  &trans    &trans  &trans      &kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT      &trans
                                &trans         &trans       &trans  &trans    &trans  &trans      &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        tri_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &kp FSLH  &kp ASTERISK  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N7  &kp N8    &kp N9        &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N4  &kp N5    &kp N6        &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N1  &kp N2    &kp N3        &kp ENTER  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &kp N0  &kp DOT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        num_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
